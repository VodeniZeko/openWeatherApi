{"ast":null,"code":"var _jsxFileName = \"/Users/vodenizeko/Desktop/Ned/openWeatherApi/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport sunny from \"./images/sunny.png\";\nimport cloudy from \"./images/cloudy.png\";\nimport rainy from \"./images/rain.png\";\nimport snow from \"./images/snow.png\";\nimport tornado from \"./images/tornado.png\";\nimport thunder from \"./images/thunder.png\";\nimport windy from \"./images/windy.png\"; // import arrow from \"./images/arrow.png\";\n// import humidity from \"./images/humidity.png\";\n\nimport CircleLoader from \"react-spinners/CircleLoader\"; // **************************************************************\n\nconst api = {\n  key: \"67b10bbf46e6fecb07c0365d103c7e1f\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst cityData = {\n  base: \"https://api.openweathermap.org/data/2.5/onecall?\"\n};\n\nfunction MyModal(props) {\n  const [query, setQuery] = useState(\"\");\n  const [coord, setCoord] = useState({\n    lat: 47.61,\n    lon: -122.33\n  });\n  const setCurrent = props.setCurrent;\n  const show = props.setModal;\n  const setWeather = props.setWeather;\n\n  async function fetchCoords() {\n    const response = await fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`);\n    const json = await response.json();\n\n    if (json.cod !== \"404\") {\n      setCurrent(json);\n      setCoord(json.coord);\n    } else {\n      alert(\"Oops, city not found! try again..\");\n      setQuery(\"\");\n      return;\n    }\n\n    setQuery(\"\");\n  }\n\n  useEffect(() => {\n    if (coord) {\n      async function fetchCityData() {\n        const response = await fetch(`${cityData.base}lat=${coord.lat}&lon=${coord.lon}&units=imperial&appid=${api.key}`);\n        const json = await response.json();\n        setWeather(json);\n      }\n\n      fetchCityData();\n    }\n\n    return;\n  }, [coord, setWeather]);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetchCoords();\n      show(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    style: {\n      position: \"absolute\",\n      background: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      background: \"transparent\",\n      border: \"none\",\n      fontSize: \"1rem\",\n      fontWeight: \"bold\",\n      margin: \"3px\",\n      cursor: \"pointer\"\n    },\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Modal.Title, {\n    style: {\n      fontSize: \"1.5rem\",\n      textAlign: \"center\",\n      fontFamily: \"Montserrat sans-serif\"\n    },\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Choose a city ?\"), /*#__PURE__*/React.createElement(Modal.Body, {\n    style: {\n      textAlign: \"center\",\n      margin: \"3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      fontSize: \"1rem\",\n      borderRadius: \"25px\",\n      outline: \"none\",\n      height: \"40px\",\n      textAlign: \"center\",\n      fontFamily: \"Montserrat sans-serif\"\n    },\n    type: \"text\",\n    className: \"search-box\",\n    placeholder: \"Your city here...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction App(props) {\n  const [current, setCurrent] = useState(null);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    axios.get(`${api.base}weather?q=Seattle&units=imperial&APPID=${api.key}`).then(res => setCurrent(res.data));\n  }, []); //curent date builder\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; // let days = [\n    //   \"Sunday\",\n    //   \"Monday\",\n    //   \"Tuesday\",\n    //   \"Wednesday\",\n    //   \"Thursday\",\n    //   \"Friday\",\n    //   \"Saturday\"\n    // ];\n    // let day = days[d.getDay()];\n\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return ` ${date} ${month} ${year}`;\n  };\n\n  const now = new Date();\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const day = days[now.getDay()];\n  const weatherStatus = current !== null ? current.weather[0].main : null; //unix time to future date converter\n\n  const weekDays = unix => {\n    const milliseconds = unix * 1000;\n    const dateObject = new Date(milliseconds);\n    const nextDay = dateObject.toLocaleString(\"en-US\", {\n      weekday: \"long\"\n    });\n    return nextDay;\n  }; //function for weather icon display\n\n\n  let checkWeather = name => {\n    switch (name) {\n      case \"Clear\":\n        return sunny;\n        break;\n\n      case \"Clouds\":\n        return cloudy;\n        break;\n\n      case \"Rain\":\n        return rainy;\n        break;\n\n      case \"Drizzle\":\n        return rainy;\n        break;\n\n      case \"Snow\":\n        return snow;\n        break;\n\n      case \"Thunderstorm\":\n        return thunder;\n        break;\n\n      case \"Windy\":\n        return windy;\n        break;\n\n      case \"Tornado\":\n        return tornado;\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const weatherImage = checkWeather(weatherStatus);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, current === null ? /*#__PURE__*/React.createElement(CircleLoader, {\n    size: 150,\n    color: \"#123abc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    id: \"particles-js\",\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-side\",\n    style: {\n      backgroundImage: `url(${weatherImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"date-dayname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, day), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"date-day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, dateBuilder(new Date())), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"location-icon\",\n    \"data-feather\": \"map-pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, current.name, \", \", current.sys.country)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"weather-icon\",\n    \"data-feather\": \"sun\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"weather-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, Math.round(current.main.temp), \"\\xB0F\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"weather-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, current.weather[0].main))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"today-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"precipitation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 19\n    }\n  }, \"FEELS LIKE\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, current.main.feels_like, \" \\xB0F\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"humidity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, \"HUMIDITY\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, current.main.humidity, \" %\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wind\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, \"WIND\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 19\n    }\n  }, current.wind.speed, \" mph\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  })))), weather !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"week-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"day-icon\",\n    \"data-feather\": \"sun\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, weekDays(weather.daily[0].dt)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, Math.round(weather.daily[0].temp.day), \"\\xB0F\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"day-icon\",\n    \"data-feather\": \"cloud\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, weekDays(weather.daily[1].dt)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, Math.round(weather.daily[1].temp.day), \"\\xB0F\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"day-icon\",\n    \"data-feather\": \"cloud-snow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, weekDays(weather.daily[2].dt)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, Math.round(weather.daily[2].temp.day), \"\\xB0F\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"day-icon\",\n    \"data-feather\": \"cloud-rain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }, weekDays(weather.daily[3].dt)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"day-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, Math.round(weather.daily[3].temp.day), \"\\xB0F\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalShow(true),\n    className: \"location-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n    \"data-feather\": \"map-pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, \"Change location\"))))), /*#__PURE__*/React.createElement(MyModal, {\n    setWeather: setWeather,\n    setModal: setModalShow,\n    setCurrent: setCurrent,\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vodenizeko/Desktop/Ned/openWeatherApi/src/App.js"],"names":["React","useState","useEffect","axios","Modal","Button","sunny","cloudy","rainy","snow","tornado","thunder","windy","CircleLoader","api","key","base","cityData","MyModal","props","query","setQuery","coord","setCoord","lat","lon","setCurrent","show","setModal","setWeather","fetchCoords","response","fetch","json","cod","alert","fetchCityData","search","evt","position","background","textAlign","border","fontSize","fontWeight","margin","cursor","onHide","fontFamily","borderRadius","outline","height","e","target","value","App","current","modalShow","setModalShow","weather","get","then","res","data","dateBuilder","d","months","date","getDate","month","getMonth","year","getFullYear","now","Date","days","day","getDay","weatherStatus","main","weekDays","unix","milliseconds","dateObject","nextDay","toLocaleString","weekday","checkWeather","name","weatherImage","backgroundImage","sys","country","Math","round","temp","feels_like","humidity","wind","speed","daily","dt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport sunny from \"./images/sunny.png\";\nimport cloudy from \"./images/cloudy.png\";\nimport rainy from \"./images/rain.png\";\nimport snow from \"./images/snow.png\";\nimport tornado from \"./images/tornado.png\";\nimport thunder from \"./images/thunder.png\";\nimport windy from \"./images/windy.png\";\n// import arrow from \"./images/arrow.png\";\n// import humidity from \"./images/humidity.png\";\nimport CircleLoader from \"react-spinners/CircleLoader\";\n// **************************************************************\n\nconst api = {\n  key: \"67b10bbf46e6fecb07c0365d103c7e1f\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst cityData = {\n  base: \"https://api.openweathermap.org/data/2.5/onecall?\"\n};\n\nfunction MyModal(props) {\n  const [query, setQuery] = useState(\"\");\n  const [coord, setCoord] = useState({ lat: 47.61, lon: -122.33 });\n  const setCurrent = props.setCurrent;\n  const show = props.setModal;\n  const setWeather = props.setWeather;\n\n  async function fetchCoords() {\n    const response = await fetch(\n      `${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`\n    );\n    const json = await response.json();\n    if (json.cod !== \"404\") {\n      setCurrent(json);\n      setCoord(json.coord);\n    } else {\n      alert(\"Oops, city not found! try again..\");\n      setQuery(\"\");\n      return;\n    }\n    setQuery(\"\");\n  }\n  useEffect(() => {\n    if (coord) {\n      async function fetchCityData() {\n        const response = await fetch(\n          `${cityData.base}lat=${coord.lat}&lon=${coord.lon}&units=imperial&appid=${api.key}`\n        );\n        const json = await response.json();\n        setWeather(json);\n      }\n      fetchCityData();\n    }\n    return;\n  }, [coord, setWeather]);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetchCoords();\n      show(false);\n    }\n  };\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      style={{ position: \"absolute\", background: \"white\" }}\n    >\n      <Modal.Header style={{ textAlign: \"right\" }}>\n        <Button\n          style={{\n            background: \"transparent\",\n            border: \"none\",\n            fontSize: \"1rem\",\n            fontWeight: \"bold\",\n            margin: \"3px\",\n            cursor: \"pointer\"\n          }}\n          onClick={props.onHide}\n        >\n          X\n        </Button>\n      </Modal.Header>\n      <Modal.Title\n        style={{\n          fontSize: \"1.5rem\",\n          textAlign: \"center\",\n          fontFamily: \"Montserrat sans-serif\"\n        }}\n        id=\"contained-modal-title-vcenter\"\n      >\n        Choose a city ?\n      </Modal.Title>\n      <Modal.Body style={{ textAlign: \"center\", margin: \"3rem\" }}>\n        <input\n          style={{\n            fontSize: \"1rem\",\n            borderRadius: \"25px\",\n            outline: \"none\",\n            height: \"40px\",\n            textAlign: \"center\",\n            fontFamily: \"Montserrat sans-serif\"\n          }}\n          type=\"text\"\n          className=\"search-box\"\n          placeholder=\"Your city here...\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction App(props) {\n  const [current, setCurrent] = useState(null);\n  const [modalShow, setModalShow] = React.useState(false);\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(`${api.base}weather?q=Seattle&units=imperial&APPID=${api.key}`)\n      .then(res => setCurrent(res.data));\n  }, []);\n\n  //curent date builder\n  const dateBuilder = d => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    // let days = [\n    //   \"Sunday\",\n    //   \"Monday\",\n    //   \"Tuesday\",\n    //   \"Wednesday\",\n    //   \"Thursday\",\n    //   \"Friday\",\n    //   \"Saturday\"\n    // ];\n\n    // let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return ` ${date} ${month} ${year}`;\n  };\n  const now = new Date();\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  const day = days[now.getDay()];\n\n  const weatherStatus = current !== null ? current.weather[0].main : null;\n  //unix time to future date converter\n  const weekDays = unix => {\n    const milliseconds = unix * 1000;\n    const dateObject = new Date(milliseconds);\n    const nextDay = dateObject.toLocaleString(\"en-US\", { weekday: \"long\" });\n    return nextDay;\n  };\n\n  //function for weather icon display\n  let checkWeather = name => {\n    switch (name) {\n      case \"Clear\":\n        return sunny;\n        break;\n      case \"Clouds\":\n        return cloudy;\n        break;\n      case \"Rain\":\n        return rainy;\n        break;\n      case \"Drizzle\":\n        return rainy;\n        break;\n      case \"Snow\":\n        return snow;\n        break;\n      case \"Thunderstorm\":\n        return thunder;\n        break;\n      case \"Windy\":\n        return windy;\n        break;\n      case \"Tornado\":\n        return tornado;\n        break;\n      default:\n        return;\n    }\n  };\n\n  const weatherImage = checkWeather(weatherStatus);\n\n  return (\n    <>\n      {current === null ? (\n        <CircleLoader size={150} color={\"#123abc\"} />\n      ) : (\n        <div id=\"particles-js\" className=\"container\">\n          <div\n            className=\"weather-side\"\n            style={{ backgroundImage: `url(${weatherImage})` }}\n          >\n            <div className=\"weather-gradient\"></div>\n            <div className=\"date-container\">\n              <h2 className=\"date-dayname\">{day}</h2>\n              <span className=\"date-day\">{dateBuilder(new Date())}</span>\n              <i className=\"location-icon\" data-feather=\"map-pin\"></i>\n              <span className=\"location\">\n                {current.name}, {current.sys.country}\n              </span>\n            </div>\n            <div className=\"weather-container\">\n              <i className=\"weather-icon\" data-feather=\"sun\"></i>\n              <h1 className=\"weather-temp\">\n                {Math.round(current.main.temp)}°F\n              </h1>\n              <h3 className=\"weather-desc\">{current.weather[0].main}</h3>\n            </div>\n          </div>\n          <div className=\"info-side\">\n            <div className=\"today-info-container\">\n              <div className=\"today-info\">\n                <div className=\"precipitation\">\n                  {\" \"}\n                  <span className=\"title\">FEELS LIKE</span>\n                  <span className=\"value\">{current.main.feels_like} °F</span>\n                  <div className=\"clear\"></div>\n                </div>\n                <div className=\"humidity\">\n                  {\" \"}\n                  <span className=\"title\">HUMIDITY</span>\n                  <span className=\"value\">{current.main.humidity} %</span>\n                  <div className=\"clear\"></div>\n                </div>\n                <div className=\"wind\">\n                  {\" \"}\n                  <span className=\"title\">WIND</span>\n                  <span className=\"value\">{current.wind.speed} mph</span>\n                  <div className=\"clear\"></div>\n                </div>\n              </div>\n            </div>\n\n            {weather !== null && (\n              <div className=\"week-container\">\n                <ul className=\"week-list\">\n                  <li className=\"active\">\n                    <i className=\"day-icon\" data-feather=\"sun\"></i>\n                    <span className=\"day-name\">\n                      {weekDays(weather.daily[0].dt)}\n                    </span>\n                    <span className=\"day-temp\">\n                      {Math.round(weather.daily[0].temp.day)}°F\n                    </span>\n                  </li>\n                  <li>\n                    <i className=\"day-icon\" data-feather=\"cloud\"></i>\n                    <span className=\"day-name\">\n                      {weekDays(weather.daily[1].dt)}\n                    </span>\n                    <span className=\"day-temp\">\n                      {Math.round(weather.daily[1].temp.day)}°F\n                    </span>\n                  </li>\n                  <li>\n                    <i className=\"day-icon\" data-feather=\"cloud-snow\"></i>\n                    <span className=\"day-name\">\n                      {weekDays(weather.daily[2].dt)}\n                    </span>\n                    <span className=\"day-temp\">\n                      {Math.round(weather.daily[2].temp.day)}°F\n                    </span>\n                  </li>\n                  <li>\n                    <i className=\"day-icon\" data-feather=\"cloud-rain\"></i>\n                    <span className=\"day-name\">\n                      {weekDays(weather.daily[3].dt)}\n                    </span>\n                    <span className=\"day-temp\">\n                      {Math.round(weather.daily[3].temp.day)}°F\n                    </span>\n                  </li>\n                  <div className=\"clear\"></div>\n                </ul>\n              </div>\n            )}\n\n            <div className=\"location-container\">\n              <button\n                onClick={() => setModalShow(true)}\n                className=\"location-button\"\n              >\n                {\" \"}\n                <i data-feather=\"map-pin\"></i>\n                <span>Change location</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      <MyModal\n        setWeather={setWeather}\n        setModal={setModalShow}\n        setCurrent={setCurrent}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}